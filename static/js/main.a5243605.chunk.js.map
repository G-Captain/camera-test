{"version":3,"sources":["components/TicketPhotoPreview/mapucze.jpg","components/WebcamImage/WebcamImage.js","components/ImageCanvas/ImageCanvas.js","components/TicketPhotoPreview/TicketPhotoPreview.js","components/IconButton/IconButton.js","components/TicketPhotoPicker/TicketPhotoPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WebcamImage","props","videoConstraints","facingMode","width","ideal","webcamReference","React","createRef","this","current","getScreenshot","ref","className","screenshotFormat","minScreenshotWidth","audio","PureComponent","ImageCanvas","state","info","x","y","height","angle","invertMode","imageElement","lineWidth","strokeStyle","shadowColor","mousedown","modifiedImage","canvasElementReference","reloadImage","prevProps","src","image","Image","onload","setState","canvasContext","getContext","onRender","ratio","Math","min","max","boundWidth","getWidth","setX","boundHeight","getHeight","setY","clearRect","canvas","save","radianAngle","PI","nextRadianAngle","relativeWidth","abs","cos","sin","console","log","relativeHeight","relativeX","relativeY","rotate","drawImage","style","globalCompositeOperation","fillStyle","fillRect","restore","rotateStep","currentWidth","currentHeight","center","fitToBounds","factor","mouseFocus","event","mousePos","getMosuePositionOnCanvas","beginPath","moveTo","shadowBlur","fill","lineTo","stroke","clientX","touches","clientY","target","offsetLeft","offsetTop","toDataURL","draggable","TicketPhotoPreview","windowHeight","window","innerHeight","windowWidth","innerWidth","require","imageCanvasRenderCallback","bind","imageCanvasReference","windowTouchStartCallback","addEventListener","windowTouchMoveCallback","windowTouchEndCallback","orientationChangedCallback","removeEventListener","redraw","setInfo","paintMode","handleDrawingStart","handleDrawingInProgress","handleDrawingEnd","getModifiedImage","IconButton","buttonClickCallbackHandler","buttonClickCallback","onClick","index","additionalClass","icon","iconKey","size","TicketPhotoPicker","isLoading","isProcessing","isPaintModeEnabled","ticketAttachmentTypes","selectedTicketAttachmentType","cancelButtonClickCallback","captureButtonClickCallback","sendButtonClickCallback","togglePaintModeButtonClickCallback","dismissButtonClickCallback","ticketPhotoPreviewGetModifiedImageCallback","ticketPhotoTypeDialogTriggerSelectCallback","infoCallback","webcamImageReference","loadTicketAttachmentTypes","createTicketCarImageCancelable","cancel","getImageTicketAttachmentTypesCancelable","ticketAttachmentType","localStorage","setItem","id","valueKey","onCancel","devicePixelRatio","library","add","faCamera","faTimes","faArrowLeft","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a5243605.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mapucze.620d59e7.jpg\";","import React from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nimport './WebcamImage.css';\r\n\r\nexport default class WebcamImage extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.videoConstraints = {\r\n\t\t\tfacingMode: 'environment',\r\n        \twidth: {\r\n        \t\tideal: 1280\r\n        \t}\r\n\t\t};\r\n\t\tthis.webcamReference = React.createRef();\r\n\t}\r\n\r\n\tgetScreenshot() {\r\n\t\treturn this.webcamReference.current.getScreenshot();\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Webcam\r\n\t\t\t\tref={this.webcamReference}\r\n\t\t\t\tclassName='webcam-image-camera'\r\n\t\t\t\tscreenshotFormat='image/jpeg'\r\n\t\t\t\tminScreenshotWidth={1280}\r\n\t\t\t\taudio={false}\r\n\t\t\t\tvideoConstraints={this.videoConstraints}>\r\n\t\t\t</Webcam>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport WindowService from './WindowService.js';\r\n\r\nimport './ImageCanvas.css';\r\n\r\nexport default class ImageCanvas extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinfo: ''\r\n\t\t}\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\r\n\t\tthis.angle = 0;\r\n\r\n\t\tthis.invertMode = false;\r\n\r\n\t\tthis.imageElement = null;\r\n\r\n\t\tthis.lineWidth = 5;\r\n\t\tthis.strokeStyle = '#ff0000';\r\n\t\tthis.shadowColor =  '#ff0000';\r\n\t\tthis.mousedown = false;\r\n\r\n\t\tthis.modifiedImage = false;\r\n\r\n\t\tthis.canvasElementReference = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.reloadImage();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif(prevProps.src !== this.props) {\r\n\t\t\tthis.reloadImage();\r\n\t\t}\r\n\t}\r\n\r\n\treloadImage() {\r\n\t\tconst image = new Image();\r\n\t\timage.src = this.props.src;\r\n\t\tthis.imageElement = image;\r\n\r\n\t\timage.onload = () => {\r\n\t\t\tthis.canvasElementReference.current.width = image.width;\r\n\t\t\tthis.canvasElementReference.current.height = image.height;\r\n\r\n\t\t\tthis.width = image.width;\r\n\t\t\tthis.height = image.height;\r\n\r\n\t\t\tthis.modifiedImage = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tinfo: ' | ' + image.width + ' ' + image.height\r\n\t\t\t})\r\n\t\t\tthis.canvasContext = this.canvasElementReference.current.getContext(\"2d\");\r\n\t\t\tif(this.props.onRender) {\r\n\t\t\t\tthis.props.onRender(this.state.info);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tsetX(x) {\r\n\t\tthis.x = x;\r\n\t}\r\n\r\n\tsetY(y) {\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tgetX() {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY() {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tsetWidth(width) {\r\n\t\t// this.width = width;\r\n\t}\r\n\r\n\tsetHeight(height) {\r\n\t\t// this.height = height;\r\n\t}\r\n\r\n\tgetWidth() {\r\n\t\treturn this.width;\r\n\t}\r\n\r\n\tgetHeight() {\r\n\t\treturn this.height;\r\n\t}\r\n\r\n\tcenter() {\r\n\t\t// this.centerX();\r\n\t\t// this.centerY();\r\n\t}\r\n\r\n\t// centerX() {\r\n\t// \tconst newX = (this.props.boundWidth - this.getWidth()) / 2;\r\n\t// \tthis.setX(newX);\r\n\t// }\r\n\r\n\t// centerY() {\r\n\t// \tconst newY = (this.props.boundHeight - this.getHeight()) / 2;\r\n\t// \tthis.setY(newY);\r\n\t// }\r\n\r\n\tscale(ratio) {\r\n\t\t// const currentWidth = this.getWidth();\r\n\t\t// const currentHeight = this.getHeight();\r\n\t\t// this.setWidth(currentWidth * ratio);\r\n\t\t// this.setHeight(currentHeight * ratio);\r\n\t\t// this.canvasContext.scale(0.25,0.25);\r\n\t}\r\n\r\n\tsetXWithBounds(x) {\r\n\t\tx = Math.min(x, 0);\r\n\t\tx = Math.max(x, this.props.boundWidth - this.getWidth());\r\n\t\tthis.setX(x);\r\n\t}\r\n\r\n\tsetYWithBounds(y) {\r\n\t\ty = Math.min(y, 0);\r\n\t\ty = Math.max(y, this.props.boundHeight - this.getHeight());\r\n\t\tthis.setY(y);\r\n\t}\r\n\r\n\tredraw() {\r\n\t\tthis.canvasContext.clearRect(0, 0, this.canvasContext.canvas.width, this.canvasContext.canvas.height);\r\n\t\tthis.canvasContext.save();\r\n\r\n\t\tconst radianAngle = this.angle * Math.PI / 180;\r\n\t\tconst nextRadianAngle = (this.angle + 90) * Math.PI / 180;\r\n\r\n\t\tvar relativeWidth = Math.abs((Math.cos(radianAngle) * this.imageElement.width)) + Math.abs((Math.sin(radianAngle) * this.imageElement.height));\r\n        console.log(\"TCL: ImageCanvas -> redraw -> relativeWidth\", relativeWidth);\r\n\t\tvar relativeHeight = Math.abs((Math.cos(radianAngle) * this.imageElement.height)) + Math.abs((Math.sin(radianAngle) * this.imageElement.width));\r\n        console.log(\"TCL: ImageCanvas -> redraw -> relativeHeight\", relativeHeight);\r\n\t\t// relativeWidth = this.imageWidth;\r\n\t\t// relativeHeight = this.imageHeight;\r\n\r\n\t\tvar relativeX = Math.cos(radianAngle) * this.x + Math.sin(radianAngle) * this.y;\r\n\t\tvar relativeY = Math.cos(nextRadianAngle) * this.x + Math.sin(nextRadianAngle) * this.y;\r\n\r\n\t\tlet translateX = 0;\r\n\t\tlet translateY = 0;\r\n\r\n\t\tif(this.angle === 0) {\r\n\t\t\ttranslateX = relativeX;\r\n\t\t\ttranslateY = relativeY;\r\n\t\t}\r\n\t\tif(this.angle === 90) {\r\n\t\t\ttranslateX = relativeX;\r\n\t\t\ttranslateY = relativeY;// - relativeHeight;\r\n\t\t}\r\n\t\tif(this.angle === 180) {\r\n\t\t\ttranslateX = relativeX;// - relativeWidth;\r\n\t\t\ttranslateY = relativeY;// - relativeHeight;\r\n\t\t}\r\n\t\tif(this.angle === 270) {\r\n\t\t\ttranslateX = relativeX;// - relativeWidth;\r\n\t\t\ttranslateY = relativeY;\r\n\t\t}\r\n\r\n\t\tthis.canvasContext.rotate(this.angle * Math.PI / 180);\r\n\t\t// this.canvasContext.translate(translateX, translateY);\r\n\t\t\r\n\t\t// this.canvasElementReference.current.style.height = this.props.boundHeight;\r\n\t\t// this.canvasElementReference.current.style.width = this.props.boundWidth;\r\n\t\tthis.canvasContext.drawImage(this.imageElement, 0, 0, this.imageElement.width, this.imageElement.height, 0, 0, relativeWidth, relativeHeight);\r\n\r\n\r\n\t\t// const calcWidthRatio = this.imageElement.width/this.props.boundWidth;\r\n\t\t// const calcHeightRatio = this.imageElement.height/this.props.boundHeight;\r\n\t\t// const calcRatio = Math.max(calcHeightRatio,calcWidthRatio);\r\n\t\t// if(calcHeightRatio > calcWidthRatio) {\r\n\t\t// \tthis.canvasElementReference.current.style.width = this.imageElement.width/calcHeightRatio+'px';\r\n\t\t// \tthis.canvasElementReference.current.style.height = this.props.boundHeight+'px';\r\n\t\t// } else {\r\n\t\t// \tthis.canvasElementReference.current.style.width = this.props.boundWidth+'px';\r\n\t\t// \tthis.canvasElementReference.current.style.height = this.imageElement.height/calcWidthRatio+'px';\r\n\t\t// }\r\n\t\t// this.canvasElementReference.current.style.width = this.props.boundWidth+'px';\r\n        console.log(\"TCL: ImageCanvas -> redraw -> this.canvasElementReference.current.style.width\", this.canvasElementReference.current.style.width);\r\n\t\t// this.canvasElementReference.current.style.height = this.props.boundHeight+'px';\r\n        console.log(\"TCL: ImageCanvas -> redraw -> this.canvasElementReference.current.style.height\", this.canvasElementReference.current.style.height);\r\n\t\tif(this.invertMode === true) {\r\n\t\t\tthis.canvasContext.globalCompositeOperation = 'difference';\r\n\t\t\tthis.canvasContext.fillStyle = 'white';\r\n\t\t\tthis.canvasContext.fillRect(0, 0, relativeWidth, relativeHeight);\r\n\t\t}\r\n\t\tthis.canvasContext.restore();\r\n\t}\r\n\r\n\tfitToBounds() {\r\n        // console.log(\"TCL: ImageCanvas -> fitToBounds -> fitToBounds\");\r\n\t\t// const calcWidthRatio = this.imageElement.width/this.props.boundWidth;\r\n\t\t// const calcHeightRatio = this.imageElement.height/this.props.boundHeight;\r\n\t\t// if(calcHeightRatio > calcWidthRatio) {\r\n\t\t\tthis.canvasElementReference.current.style.height = this.props.boundHeight+'px';\r\n\t\t\t// this.canvasElementReference.current.style.width = this.imageElement.width/calcHeightRatio+'px';\r\n\t\t\tthis.canvasElementReference.current.style.height = this.props.boundHeight+'px';\r\n\t\t// } else {\r\n\t\t\t// this.canvasElementReference.current.style.width = this.props.boundWidth+'px';\r\n\t\t\t// this.canvasElementReference.current.style.height = this.props.boundHeight+'px';\r\n\t\t\t// this.canvasElementReference.current.style.height = this.imageElement.height/calcWidthRatio+'px';\r\n\t\t// }\r\n\t\t// const padding = this.props.padding || 0;\r\n\t\t// const widthRatio = (this.props.boundWidth - padding) / this.imageElement.width;\r\n\t\t// const heightRatio = (this.props.boundHeight - padding) / this.imageElement.height;\r\n\t\t// const scaleRatio = Math.min(1, widthRatio, heightRatio);\r\n\t\t// this.scale(scaleRatio);\r\n\t}\r\n\r\n\tisZoomOutAvailable() {\r\n        console.log(\"TCL: ImageCanvas -> isZoomOutAvailable -> isZoomOutAvailable\");\r\n\t\treturn this.getWidth() > this.props.boundWidth || this.getHeight() > this.props.boundHeight;\r\n\t}\r\n\r\n\trotate(rotateStep) {\r\n        console.log(\"TCL: ImageCanvas -> rotate -> rotate\");\r\n\t\tthis.angle += rotateStep;\r\n\r\n\t\tif(this.angle > 270) {\r\n\t\t\tthis.angle = 0;\r\n\t\t}\r\n\t\tif(this.angle < 0) {\r\n\t\t\tthis.angle = 270;\r\n\t\t}\r\n\r\n\t\tconst currentWidth = this.width;\r\n\t\tconst currentHeight = this.height;\r\n\r\n\t\tthis.width = currentHeight;\r\n\t\tthis.height = currentWidth;\r\n\r\n\t\tthis.center();\r\n\t\tthis.fitToBounds();\r\n\t}\r\n\r\n\trotateRight() {\r\n        console.log(\"TCL: ImageCanvas -> rotateRight -> rotateRight\");\r\n\t\tthis.rotate(90);\r\n\t}\r\n\r\n\trotateLeft() {\r\n        console.log(\"TCL: ImageCanvas -> rotateLeft -> rotateLeft\");\r\n\t\tthis.rotate(-90);\r\n\t}\r\n\r\n\tzoom(factor, mouseFocus) {\r\n        console.log(\"TCL: ImageCanvas -> zoom -> zoom\");\r\n\t\t// if(factor < 1 && this.isZoomOutAvailable() === false) {\r\n\t\t// \treturn false;\r\n\t\t// }\r\n\r\n\t\t// this.scale(factor);\r\n\r\n\t\t// const relativeFactor = factor - 1;\r\n\t\t// if(this.getWidth() > this.props.boundWidth && mouseFocus === true) {\r\n\t\t// \tconst currentX = this.getX();\r\n\t\t// \tconst offsetX = (WindowService.getMouseX() - currentX) * relativeFactor;\r\n\t\t// \tlet newX = currentX - offsetX;\r\n\t\t// \tthis.setXWithBounds(newX);\r\n\t\t// } else {\r\n\t\t// \tthis.centerX();\r\n\t\t// }\r\n\t\t// if(this.getHeight() > this.props.boundHeight && mouseFocus === true) {\r\n\t\t// \tconst currentY = this.getY();\r\n\t\t// \tconst offsetY = (WindowService.getMouseY() - currentY) * relativeFactor;\r\n\t\t// \tlet newY = currentY - offsetY;\r\n\t\t// \tthis.setYWithBounds(newY);\r\n\t\t// } else {\r\n\t\t// \tthis.centerY();\r\n\t\t// }\r\n\t}\r\n\r\n\ttoggleInvertMode() {\r\n\t\tthis.invertMode = !this.invertMode;\r\n\t}\r\n\r\n\r\n\thandleDrawingStart(event) {\r\n\t\tconst mousePos = this.getMosuePositionOnCanvas(event);\r\n\t\tthis.canvasContext.beginPath();\r\n\t\tthis.canvasContext.moveTo(mousePos.x, mousePos.y);\r\n\t\tthis.canvasContext.save();\r\n\t\tthis.canvasContext.lineWidth = this.lineWidth;\r\n\t\tthis.canvasContext.strokeStyle = this.strokeStyle;\r\n\t\tthis.canvasContext.shadowColor = null;\r\n\t\tthis.canvasContext.shadowBlur = null;\r\n\t\tthis.canvasContext.fill();\r\n\t\tthis.mousedown = true;\r\n\t}\r\n\r\n\thandleDrawingInProgress(event) {\r\n\t\tif (this.mousedown) {\r\n\t\t\tconst mousePos = this.getMosuePositionOnCanvas(event);\r\n\t\t\tthis.canvasContext.lineTo(mousePos.x, mousePos.y);\r\n\t\t\tthis.canvasContext.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\thandleDrawingEnd() {\r\n\t\tif (this.mousedown) {\r\n\t\t\tthis.canvasContext.shadowColor = this.shadowColor;\r\n\t\t\tthis.canvasContext.shadowBlur = this.lineWidth/4;\r\n\t\t\tthis.canvasContext.stroke();\r\n\t\t}\r\n\r\n\t\tthis.modifiedImage = true;\r\n\t\tthis.mousedown = false;\r\n\t}\r\n\r\n\tgetMosuePositionOnCanvas(event) {\r\n\t\tconst clientX = event.clientX || event.touches[0].clientX;\r\n\t\tconst clientY = event.clientY || event.touches[0].clientY;\r\n\t\tconst { offsetLeft, offsetTop } = event.target;\r\n\t\tconst canvasX = clientX - offsetLeft;\r\n\t\tconst canvasY = clientY - offsetTop;\r\n\t\treturn { x: canvasX, y: canvasY };\r\n\t}\r\n\r\n\tgetModifiedImage() {\r\n\t\tif(this.modifiedImage === true) {\r\n\t\t\treturn this.canvasElementReference.current.toDataURL('image/jpeg', 0.92);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas\r\n\t\t\t\tdraggable=\"false\"\r\n\t\t\t\tclassName='image-canvas'\r\n\t\t\t\tref={this.canvasElementReference}>\r\n\t\t\t</canvas>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ImageCanvas from './../ImageCanvas/ImageCanvas';\r\n\r\nimport './TicketPhotoPreview.css';\r\n\r\nexport default class TicketPhotoPreview extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\twindowHeight : window.innerHeight,\r\n\t\t\twindowWidth: window.innerWidth,\r\n\t\t\timage: require('./mapucze.jpg')\r\n\t\t}\r\n\t\tconsole.log(\"TCL: TicketPhotoPreview -> constructor -> this.props.image\", this.props.image);\r\n\r\n\r\n\r\n\t\tthis.imageCanvasRenderCallback = this.imageCanvasRenderCallback.bind(this);\r\n\r\n\t\tthis.imageCanvasReference = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.windowTouchStartCallback = this.windowTouchStartCallback.bind(this)\r\n\t\twindow.addEventListener('touchstart', this.windowTouchStartCallback);\r\n\t\tthis.windowTouchMoveCallback = this.windowTouchMoveCallback.bind(this)\r\n\t\twindow.addEventListener('touchmove', this.windowTouchMoveCallback);\r\n\t\tthis.windowTouchEndCallback = this.windowTouchEndCallback.bind(this)\r\n\t\twindow.addEventListener('touchend', this.windowTouchEndCallback);\r\n\t\tthis.orientationChangedCallback = this.orientationChangedCallback.bind(this);\r\n\t\twindow.addEventListener(\"resize\", this.orientationChangedCallback);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('touchstart', this.windowTouchStartCallback);\r\n\t\twindow.removeEventListener('touchmove', this.windowTouchMoveCallback);\r\n\t\twindow.removeEventListener('touchend', this.windowTouchEndCallback);\r\n\t\twindow.removeEventListener(\"resize\", this.orientationChangedCallback);\r\n\t}\r\n\r\n\torientationChangedCallback() {\r\n\t\tthis.setState({\r\n\t\t\twindowHeight: window.innerHeight,\r\n\t\t\twindowWidth: window.innerWidth\r\n\t\t})\r\n\t}\r\n\r\n\timageCanvasRenderCallback(info) {\r\n\t\tthis.imageCanvasReference.current.fitToBounds();\r\n\t\tthis.imageCanvasReference.current.center();\r\n\t\tthis.imageCanvasReference.current.redraw();\r\n\t\tthis.props.setInfo(info, this.state.windowWidth, this.state.windowHeight);\r\n\t}\r\n\r\n\twindowTouchStartCallback(event) {\r\n\t\tif(this.props.paintMode !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.imageCanvasReference.current.handleDrawingStart(event);\r\n\t}\r\n\r\n\twindowTouchMoveCallback(event) {\r\n\t\tif(this.props.paintMode !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.imageCanvasReference.current.handleDrawingInProgress(event);\r\n\t}\r\n\r\n\twindowTouchEndCallback(event) {\r\n\t\tif(this.props.paintMode !== true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.imageCanvasReference.current.handleDrawingEnd();\r\n\t\tthis.props.modifiedImage(this.imageCanvasReference.current.getModifiedImage())\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className='ticket-photo-preview-image-canvas-container'>\r\n\t\t\t\t\t<ImageCanvas\r\n\t\t\t\t\t\tref={this.imageCanvasReference}\r\n\t\t\t\t\t\tsrc={this.props.image}\r\n\t\t\t\t\t\tboundWidth={this.state.windowWidth}\r\n\t\t\t\t\t\tboundHeight={this.state.windowHeight}\r\n\t\t\t\t\t\tonRender={this.imageCanvasRenderCallback}>\r\n\t\t\t\t\t</ImageCanvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./IconButton.css\";\r\n\r\nexport default class IconButton extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.buttonClickCallbackHandler = (event) => this.buttonClickCallback(event);\r\n\t}\r\n\r\n\tbuttonClickCallback(event) {\r\n\t\tif(this.props.onClick) {\r\n\t\t\tthis.props.onClick(event, this.props.index)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t    return (\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"icon-button \" + (this.props.additionalClass ? this.props.additionalClass : '')}\r\n\t\t\t\tonClick={this.buttonClickCallbackHandler}>\r\n\t\t\t\t<FontAwesomeIcon icon={this.props.iconKey} size={this.props.size ? this.props.size : \"1x\"}/>\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport WebcamImage from './../WebcamImage/WebcamImage.js';\r\nimport TicketPhotoPreview from './../TicketPhotoPreview/TicketPhotoPreview.js';\r\nimport IconButton from './../IconButton/IconButton.js';\r\n\r\nimport './TicketPhotoPicker.css';\r\n\r\n\r\nexport default class TicketPhotoPicker extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisLoading: false,\r\n\t\t\tisProcessing: false,\r\n\t\t\timage: null,\r\n\t\t\tisPaintModeEnabled: false,\r\n\t\t\tticketAttachmentTypes: [],\r\n\t\t\tselectedTicketAttachmentType: null,\r\n\t\t\tinfo: ''\r\n\t\t}\r\n\r\n\t\tthis.cancelButtonClickCallback = this.cancelButtonClickCallback.bind(this);\r\n\t\tthis.captureButtonClickCallback = this.captureButtonClickCallback.bind(this);\r\n\r\n\t\tthis.sendButtonClickCallback = this.sendButtonClickCallback.bind(this);\r\n\t\tthis.togglePaintModeButtonClickCallback = this.togglePaintModeButtonClickCallback.bind(this);\r\n\t\tthis.dismissButtonClickCallback = this.dismissButtonClickCallback.bind(this);\r\n\r\n\t\tthis.ticketPhotoPreviewGetModifiedImageCallback = this.ticketPhotoPreviewGetModifiedImageCallback.bind(this);\r\n\t\tthis.ticketPhotoTypeDialogTriggerSelectCallback = this.ticketPhotoTypeDialogTriggerSelectCallback.bind(this);\r\n\t\tthis.infoCallback = this.infoCallback.bind(this);\r\n\r\n\t\tthis.webcamImageReference = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadTicketAttachmentTypes();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif(this.createTicketCarImageCancelable) {\r\n\t\t\tthis.createTicketCarImageCancelable.cancel();\r\n\t\t}\r\n\t\tif(this.getImageTicketAttachmentTypesCancelable) {\r\n\t\t\tthis.getImageTicketAttachmentTypesCancelable.cancel();\r\n\t\t}\r\n\t}\r\n\r\n\tinfoCallback(info,x, y) {\r\n\t\tthis.setState({\r\n\t\t\tinfo: info + ' ' + x + ' ' + y\r\n\t\t});\r\n\t}\r\n\r\n\tloadTicketAttachmentTypes() {\r\n\t\t// this.getImageTicketAttachmentTypesCancelable.promise.then(ticketAttachmentTypes => {\r\n\r\n\t\t// \tconst savedTicketAttachmentTypeId = localStorage.getItem('ticketPhotoPickerTicketAttachmentTypeId');\r\n\r\n\t\t// \tlet selectedTicketAttachmentType = null;\r\n\t\t// \tif(savedTicketAttachmentTypeId) {\r\n\t\t// \t\tselectedTicketAttachmentType = ticketAttachmentTypes.find(ticketAttachmentType => ticketAttachmentType.id === parseInt(savedTicketAttachmentTypeId));\r\n\t\t// \t}\r\n\t\t// \tif(!selectedTicketAttachmentType) {\r\n\t\t// \t\tselectedTicketAttachmentType = ticketAttachmentTypes[0];\r\n\t\t// \t}\r\n\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tisLoading: false,\r\n\t\t// \t\tticketAttachmentTypes: ticketAttachmentTypes,\r\n\t\t// \t\tselectedTicketAttachmentType: selectedTicketAttachmentType\r\n\t\t// \t});\r\n\t\t// }).catch(error => {\r\n\t\t// \tif(error.isCanceled) {\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// });\r\n\t}\r\n\r\n\tticketPhotoTypeDialogTriggerSelectCallback(ticketAttachmentType) {\r\n\t\tthis.setState({\r\n\t\t\tselectedTicketAttachmentType: ticketAttachmentType\r\n\t\t});\r\n\t\tlocalStorage.setItem('ticketPhotoPickerTicketAttachmentTypeId', ticketAttachmentType.id);\r\n\t}\r\n\r\n\tticketPhotoPreviewGetModifiedImageCallback(modifiedImage) {\r\n\t\tthis.setState({\r\n\t\t\timage: modifiedImage\r\n\t\t});\r\n\t}\r\n\r\n\tcancelButtonClickCallback(valueKey) {\r\n\t\tthis.props.onCancel();\r\n\t}\r\n\r\n\tcaptureButtonClickCallback() {\r\n\t\tthis.setState({\r\n\t\t\timage: this.webcamImageReference.current.getScreenshot()\r\n\t\t});\r\n\t}\r\n\r\n\tdismissButtonClickCallback() {\r\n\t\tthis.setState({\r\n\t\t\timage: null\r\n\t\t});\r\n\t}\r\n\r\n\ttogglePaintModeButtonClickCallback() {\r\n\t\tthis.setState({\r\n\t\t\tisPaintModeEnabled: !this.state.isPaintModeEnabled\r\n\t\t});\r\n\t}\r\n\r\n\tsendButtonClickCallback() {\r\n\t\tthis.setState({\r\n\t\t\tisProcessing: true,\r\n\t\t\tisPaintModeEnabled: false\r\n\t\t})\r\n\r\n\t\t// const ticketAttachmentTypeId = this.state.selectedTicketAttachmentType.id;\r\n\t\t// this.createTicketCarImageCancelable = TicketService.createTicketCarImage(parseInt(this.props.ticketId), ticketAttachmentTypeId, this.state.image);\r\n\t\t// this.createTicketCarImageCancelable.promise.then(ticket => {\r\n\t\t// \tNotificationService.setSuccessNotification(t.createTicketCarImageSuccessNotification);\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tisProcessing: false,\r\n\t\t// \t\timage: null\r\n\t\t// \t});\r\n\t\t// \treturn false;\r\n\t\t// }).catch(error => {\r\n\t\t// \tif(error.isCanceled) {\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// \tNotificationService.setErrorNotification(t.internalErrorNotification, error);\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tisProcessing: false\r\n\t\t// \t});\r\n\t\t// });\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<Fragment>\r\n\r\n\t\t\t\t{(this.state.isLoading === false && this.state.isProcessing === false) &&\r\n\t\t\t\t\t<Fragment>\r\n\r\n\t\t\t\t\t\t<div className='ticket-photo-picker-header-container'>\r\n\t\t\t\t\t\t\t<div className='ticket-photo-picker-header'>\r\n\t\t\t\t\t\t\t\tVER 1 DPI: {window.devicePixelRatio} {this.state.info}\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t{this.state.image !== null &&\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<TicketPhotoPreview\r\n\t\t\t\t\t\t\t\t\timage={this.state.image}\r\n\t\t\t\t\t\t\t\t\tpaintMode={this.state.isPaintModeEnabled}\r\n\t\t\t\t\t\t\t\t\tmodifiedImage={this.ticketPhotoPreviewGetModifiedImageCallback}\r\n\t\t\t\t\t\t\t\t\tsetInfo={this.infoCallback}>\r\n\t\t\t\t\t\t\t\t</TicketPhotoPreview>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\ticonKey={'arrow-left'}\r\n\t\t\t\t\t\t\t\t\tadditionalClass='fixed-button left-bottom-element'\r\n\t\t\t\t\t\t\t\t\tonClick={this.dismissButtonClickCallback}>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<div className={this.state.image !== null ? 'hidden' : ''}>\r\n\t\t\t\t\t\t\t<WebcamImage\r\n\t\t\t\t\t\t\t\tref={this.webcamImageReference}>\r\n\t\t\t\t\t\t\t</WebcamImage>\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\ticonKey={'times'}\r\n\t\t\t\t\t\t\t\tadditionalClass='fixed-button left-bottom-element'\r\n\t\t\t\t\t\t\t\tonClick={this.cancelButtonClickCallback}>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\ticonKey={'camera'}\r\n\t\t\t\t\t\t\t\tadditionalClass='fixed-button center-bottom-element'\r\n\t\t\t\t\t\t\t\tonClick={this.captureButtonClickCallback}>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t}\r\n\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\nimport TicketPhotoPicker from './components/TicketPhotoPicker/TicketPhotoPicker.js';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCamera, faTimes, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nlibrary.add( faCamera, faTimes, faArrowLeft);\n\n\nfunction App() {\n  return (\n    \n    <div className='App'>\n      <TicketPhotoPicker>\n      </TicketPhotoPicker>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}